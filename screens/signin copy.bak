import 'dart:ui';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_test/backend/auth.dart';
import 'package:firebase_test/helpers/database.dart';
import 'package:firebase_test/helpers/shared.dart';
import 'package:firebase_test/widgets/widgets.dart';
import 'package:flutter/material.dart';

import 'home_user.dart';

class SignIn extends StatefulWidget {
  Function toggle;
  SignIn(this.toggle);
  @override
  _SignInState createState() => _SignInState();
}

class _SignInState extends State<SignIn> {
  AuthService auth = new AuthService();
  DataService db = new DataService();
  final form_key = GlobalKey<FormState>();
  TextEditingController emailEdittingController = new TextEditingController();
  TextEditingController passwordEdittingController =
      new TextEditingController();
  signIn() async {
    if (form_key.currentState.validate()) {
      await auth
          .signInwithEmailandPassword(
              emailEdittingController.text, passwordEdittingController.text)
          .then((value) async {
        if (value != null) {
          print(value);
          //SharedPref.saveLogInSharedPreferences(true);
          
          QuerySnapshot snap_user = await db.getUserbyEmail(emailEdittingController.text);
          print(snap_user.docs[0].data()['username']);
          SharedPref.saveLogInSharedPreferences(true);
          SharedPref.saveUserNameSharedPreferences(snap_user.docs[0].data()['username']);
          SharedPref.saveUserEmailSharedPreferences(snap_user.docs[0].data()['email']);
          SharedPref.saveUserIdSharedPreferences(snap_user.docs[0].data()['uid']);

          Navigator.pushReplacement(context, MaterialPageRoute(builder: (context) => UserHome()));
        }
      });
    }
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: appBarMain(context),
      body: Container(
        padding: EdgeInsets.symmetric(horizontal: 25),
        child: Column(
          children: [
            Spacer(),
            Form(
              key : form_key,
              child: Column(
                children: [
                  TextFormField(
                    validator: (val){
                      return RegExp( r"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\.[a-zA-Z]+").hasMatch(val) 
                              ? null : "Please enter valid email address";
                    },
                    style: simpleTextStyle(),
                    controller: emailEdittingController,
                    decoration: textFieldInputDecoration('Enter email address'),
                  ),
                  TextFormField(
                      validator: (v){
                        return v.isEmpty || v.length < 6 ? "Please enter password with 6 or more characters" : null;
                      },
                    style: simpleTextStyle(),
                    controller: passwordEdittingController,
                    decoration: textFieldInputDecoration('Enter email password'),
                  ),
                  
                  SizedBox(
                    height: 16,
                  ),
                  GestureDetector(
                    onTap: (){
                      signIn();
                    },
                                      child: Container(
                      padding: EdgeInsets.symmetric(vertical: 10),
                      decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(30),
                          gradient: LinearGradient(
                            colors: [
                              const Color(0xff007EF4),
                              const Color(0xff2A75BC)
                            ],
                          )),
                      width: MediaQuery.of(context).size.width,
                      child: Text(
                        'SIGN IN',
                        style: biggerTextStyle(),
                        textAlign: TextAlign.center,
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 16,
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      Text(
                        "Don't have an account?",
                         style: simpleTextStyle(), 
                        ),
                        
                      GestureDetector(
                        onTap: () {
                          widget.toggle();
                        },  
                        child: Container(
                            child: Text(
                              'Register Now',
                              style: TextStyle(
                                color: Colors.white, fontSize: 16, decoration: TextDecoration.underline,
                              ),

                              ),
                            
                          ),
                        )
                    ],
                  )
                ],
              ),
            ),
            SizedBox(
              height: 70,
            )
          ],
        ),
      ),
    );
  }
}
